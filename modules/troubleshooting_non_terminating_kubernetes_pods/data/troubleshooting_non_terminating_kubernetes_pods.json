{
  "name": "troubleshooting_non_terminating_kubernetes_pods",
  "description": "This incident type refers to the problem of Kubernetes pods that are not terminating. When a pod is no longer needed, it should terminate automatically. However, sometimes a pod can get stuck in a state where it is not terminating, even though it is no longer needed. This can be caused by a variety of factors, such as network issues, resource constraints, or bugs in the application code. Troubleshooting non-terminating Kubernetes pods involves identifying the root cause of the issue and taking steps to resolve it, such as restarting the pod, freeing up resources, or fixing bugs in the code.",
  "params": [
    {
      "name": "POD_NAME",
      "value": ""
    },
    {
      "name": "CONTAINER_NAME",
      "value": ""
    },
    {
      "name": "KUBE_SCHEDULER_POD_NAME",
      "value": ""
    },
    {
      "name": "NAMESPACE",
      "value": ""
    },
    {
      "name": "KUBE_CONTROLLER_MANAGER_POD_NAME",
      "value": ""
    },
    {
      "name": "KUBE_APISERVER_POD_NAME",
      "value": ""
    },
    {
      "name": "K8S_CLUSTER_NAME",
      "value": ""
    }
  ],
  "cells": [
    {
      "name": "cell_1",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Troubleshooting Non-Terminating Kubernetes Pods.\nThis incident type refers to the problem of Kubernetes pods that are not terminating. When a pod is no longer needed, it should terminate automatically. However, sometimes a pod can get stuck in a state where it is not terminating, even though it is no longer needed. This can be caused by a variety of factors, such as network issues, resource constraints, or bugs in the application code. Troubleshooting non-terminating Kubernetes pods involves identifying the root cause of the issue and taking steps to resolve it, such as restarting the pod, freeing up resources, or fixing bugs in the code."
    },
    {
      "name": "cell_2",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Get detailed information about a specific pod"
    },
    {
      "name": "cell_3",
      "type": "OP_LANG",
      "enabled": true,
      "content": "pod | k8s_cluster_name=$K8S_CLUSTER_NAME | app='shoreline' | limit=1 | random=1 | `kubectl describe pod ${POD_NAME}`"
    },
    {
      "name": "cell_4",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Check the logs of a specific container within a pod"
    },
    {
      "name": "cell_5",
      "type": "OP_LANG",
      "enabled": true,
      "content": "pod | k8s_cluster_name=$K8S_CLUSTER_NAME | app='shoreline' | limit=1 | random=1 | `kubectl -n $NAMESPACE logs ${POD_NAME} ${CONTAINER_NAME}`"
    },
    {
      "name": "cell_6",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Check the events related to a specific pod"
    },
    {
      "name": "cell_7",
      "type": "OP_LANG",
      "enabled": true,
      "content": "pod | k8s_cluster_name=$K8S_CLUSTER_NAME | app='shoreline' | limit=1 | random=1 | `kubectl -n $NAMESPACE get events --field-selector involvedObject.name=${POD_NAME}`"
    },
    {
      "name": "cell_8",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## See what is still running on the specific pod"
    },
    {
      "name": "cell_9",
      "type": "OP_LANG",
      "enabled": true,
      "content": "pod | k8s_cluster_name=$K8S_CLUSTER_NAME | app='shoreline' | limit=1 | random=1 | `kubectl -n $NAMESPACE top pod ${POD_NAME}`"
    },
    {
      "name": "cell_10",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Check the status of the Kubernetes components"
    },
    {
      "name": "cell_11",
      "type": "OP_LANG",
      "enabled": true,
      "content": "pod | k8s_cluster_name=$K8S_CLUSTER_NAME | app='shoreline' | limit=1 | random=1 | `kubectl get componentstatuses`"
    },
    {
      "name": "cell_12",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Check the Kubernetes API server logs"
    },
    {
      "name": "cell_13",
      "type": "OP_LANG",
      "enabled": true,
      "content": "pod | k8s_cluster_name=$K8S_CLUSTER_NAME | app='shoreline' | limit=1 | random=1 | `kubectl logs -n kube-system ${KUBE_APISERVER_POD_NAME} kube-apiserver`"
    },
    {
      "name": "cell_14",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Check the Kubernetes controller manager logs"
    },
    {
      "name": "cell_15",
      "type": "OP_LANG",
      "enabled": true,
      "content": "pod | k8s_cluster_name=$K8S_CLUSTER_NAME | app='shoreline' | limit=1 | random=1 | `kubectl logs -n kube-system ${KUBE_CONTROLLER_MANAGER_POD_NAME} kube-controller-manager`"
    },
    {
      "name": "cell_16",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Check the Kubernetes scheduler logs"
    },
    {
      "name": "cell_17",
      "type": "OP_LANG",
      "enabled": true,
      "content": "pod | k8s_cluster_name=$K8S_CLUSTER_NAME | app='shoreline' | limit=1 | random=1 | `kubectl logs -n kube-system ${KUBE_SCHEDULER_POD_NAME} kube-scheduler`"
    },
    {
      "name": "cell_18",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Show any finalizers associated with the pod."
    },
    {
      "name": "cell_19",
      "type": "OP_LANG",
      "enabled": true,
      "content": "pod | k8s_cluster_name=$K8S_CLUSTER_NAME | app='shoreline' | random=1 | limit=1 | invoke_get_pod_finalizers($POD_NAME, $NAMESPACE)"
    },
    {
      "name": "cell_20",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Forcefully delete a stuck pod (WARNING: this may cause data loss)"
    },
    {
      "name": "cell_21",
      "type": "OP_LANG",
      "enabled": true,
      "content": "pod | k8s_cluster_name=$K8S_CLUSTER_NAME | app='shoreline' | limit=1 | random=1 | `kubectl -n $NAMESPACE delete pod ${POD_NAME} --grace-period=0 --force`"
    },
    {
      "name": "cell_22",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Remove any finalizers associated with the pod."
    },
    {
      "name": "cell_23",
      "type": "OP_LANG",
      "enabled": true,
      "content": "pod | k8s_cluster_name=$K8S_CLUSTER_NAME | app='shoreline' | limit=1 | random=1 | `kubectl -n $NAMESPACE patch pod $POD_NAME -p '{\"metadata\":{\"finalizers\": []}}'`"
    }
  ]
}